from django.core.management.base import BaseCommand
from django.utils import timezone
from inventory.models import Product
from decimal import Decimal
import random
from datetime import date, timedelta

class Command(BaseCommand):
    help = 'Add 200 more unique products to the inventory'

    def handle(self, *args, **options):
        # New product data for different categories (all unique from existing ones)
        products_data = {
            'produce': [
                ('Organic Kale', 70, 110),
                ('Fresh Asparagus', 200, 300),
                ('Baby Spinach', 60, 90),
                ('Fresh Broccoli', 120, 180),
                ('Cauliflower', 100, 150),
                ('Fresh Brussels Sprouts', 150, 220),
                ('Fresh Artichokes', 300, 450),
                ('Fresh Leeks', 120, 180),
                ('Fresh Fennel', 180, 250),
                ('Fresh Radishes', 80, 120),
                ('Fresh Turnips', 60, 90),
                ('Fresh Parsnips', 100, 150),
                ('Fresh Beets', 80, 120),
                ('Fresh Celery', 90, 140),
                ('Fresh Bok Choy', 120, 180),
                ('Fresh Napa Cabbage', 100, 150),
                ('Fresh Watercress', 150, 220),
                ('Fresh Arugula', 180, 250),
                ('Fresh Endive', 200, 300),
                ('Fresh Escarole', 160, 240),
            ],
            'meat_seafood': [
                ('Fresh Veal Cutlets', 800, 1200),
                ('Fresh Quail', 600, 900),
                ('Fresh Pheasant', 1000, 1500),
                ('Fresh Rabbit', 500, 800),
                ('Fresh Venison', 1200, 1800),
                ('Fresh Bison', 1500, 2200),
                ('Fresh Elk', 1800, 2500),
                ('Fresh Wild Boar', 1000, 1500),
                ('Fresh Ostrich', 2000, 3000),
                ('Fresh Emu', 1800, 2700),
                ('Fresh Alligator', 1200, 1800),
                ('Fresh Frog Legs', 800, 1200),
                ('Fresh Snails', 600, 900),
                ('Fresh Sea Urchin', 1500, 2200),
                ('Fresh Abalone', 3000, 4500),
                ('Fresh Geoduck', 2500, 3500),
                ('Fresh Sea Cucumber', 1800, 2500),
                ('Fresh Jellyfish', 500, 800),
                ('Fresh Seaweed', 200, 300),
                ('Fresh Sea Bass', 800, 1200),
            ],
            'dairy_eggs': [
                ('Goat Milk 1L', 200, 300),
                ('Almond Milk 1L', 180, 250),
                ('Soy Milk 1L', 150, 220),
                ('Coconut Milk 1L', 160, 240),
                ('Oat Milk 1L', 170, 230),
                ('Rice Milk 1L', 140, 200),
                ('Quail Eggs (12)', 300, 450),
                ('Duck Eggs (6)', 250, 350),
                ('Turkey Eggs (6)', 400, 600),
                ('Goose Eggs (4)', 500, 750),
                ('Blue Cheese', 600, 900),
                ('Feta Cheese', 350, 500),
                ('Gouda Cheese', 450, 650),
                ('Swiss Cheese', 500, 750),
                ('Provolone Cheese', 400, 600),
                ('Havarti Cheese', 450, 650),
                ('Brie Cheese', 600, 900),
                ('Camembert Cheese', 550, 800),
                ('Roquefort Cheese', 800, 1200),
                ('Parmesan Cheese Block', 700, 1000),
            ],
            'bakery': [
                ('Sourdough Bread', 120, 180),
                ('Rye Bread', 100, 150),
                ('Pumpernickel Bread', 130, 190),
                ('Ciabatta Bread', 110, 170),
                ('Focaccia Bread', 140, 200),
                ('Baguette', 80, 120),
                ('Challah Bread', 120, 180),
                ('Pita Bread', 60, 90),
                ('Naan Bread', 70, 100),
                ('Tortillas Pack', 50, 80),
                ('English Muffins', 90, 130),
                ('Cinnamon Rolls', 150, 220),
                ('Danish Pastries', 180, 250),
                ('Eclairs', 200, 300),
                ('Cheesecake', 500, 750),
                ('Tiramisu', 600, 900),
                ('Chocolate Mousse Cake', 450, 650),
                ('Red Velvet Cake', 400, 600),
                ('Carrot Cake', 350, 500),
                ('Black Forest Cake', 500, 750),
            ],
            'frozen_foods': [
                ('Frozen Broccoli Florets', 100, 150),
                ('Frozen Cauliflower', 90, 140),
                ('Frozen Brussels Sprouts', 120, 180),
                ('Frozen Asparagus', 150, 220),
                ('Frozen Artichoke Hearts', 200, 300),
                ('Frozen Spinach', 80, 120),
                ('Frozen Kale', 100, 150),
                ('Frozen Mixed Vegetables', 110, 170),
                ('Frozen Stir Fry Mix', 130, 190),
                ('Frozen Mediterranean Mix', 140, 200),
                ('Frozen Asian Mix', 120, 180),
                ('Frozen Mexican Mix', 110, 170),
                ('Frozen Italian Mix', 130, 190),
                ('Frozen Indian Mix', 140, 200),
                ('Frozen Thai Mix', 150, 220),
                ('Frozen Greek Mix', 160, 240),
                ('Frozen Moroccan Mix', 170, 250),
                ('Frozen Japanese Mix', 180, 260),
                ('Frozen Korean Mix', 160, 240),
                ('Frozen Vietnamese Mix', 140, 200),
            ],
            'pantry_dry_goods': [
                ('Jasmine Rice 5kg', 450, 650),
                ('Brown Rice 2kg', 200, 300),
                ('Wild Rice 500g', 300, 450),
                ('Arborio Rice 1kg', 250, 350),
                ('Quinoa 500g', 180, 250),
                ('Couscous 500g', 120, 180),
                ('Bulgur Wheat 500g', 100, 150),
                ('Farro 500g', 150, 220),
                ('Millet 500g', 80, 120),
                ('Amaranth 500g', 200, 300),
                ('Teff 500g', 250, 350),
                ('Sorghum 500g', 90, 130),
                ('Buckwheat 500g', 120, 180),
                ('Spelt 500g', 140, 200),
                ('Kamut 500g', 160, 240),
                ('Freekeh 500g', 180, 260),
                ('Barley 500g', 70, 100),
                ('Oats Steel Cut 500g', 100, 150),
                ('Oats Rolled 1kg', 120, 180),
                ('Oats Instant 500g', 80, 120),
            ],
            'beverages': [
                ('Pomegranate Juice 1L', 180, 250),
                ('Cranberry Juice 1L', 160, 220),
                ('Grapefruit Juice 1L', 140, 200),
                ('Pineapple Juice 1L', 120, 180),
                ('Peach Juice 1L', 130, 190),
                ('Pear Juice 1L', 140, 200),
                ('Plum Juice 1L', 150, 220),
                ('Cherry Juice 1L', 200, 300),
                ('Blueberry Juice 1L', 180, 250),
                ('Strawberry Juice 1L', 160, 220),
                ('Raspberry Juice 1L', 170, 240),
                ('Blackberry Juice 1L', 190, 270),
                ('Elderberry Juice 1L', 220, 320),
                ('Acai Juice 1L', 250, 350),
                ('Goji Berry Juice 1L', 280, 400),
                ('Mangosteen Juice 1L', 300, 450),
                ('Dragon Fruit Juice 1L', 320, 480),
                ('Passion Fruit Juice 1L', 240, 360),
                ('Guava Juice 1L', 200, 300),
                ('Lychee Juice 1L', 260, 380),
            ],
            'snacks': [
                ('Kale Chips', 150, 220),
                ('Seaweed Snacks', 120, 180),
                ('Edamame Snacks', 180, 250),
                ('Roasted Chickpeas', 100, 150),
                ('Roasted Lentils', 110, 160),
                ('Roasted Fava Beans', 130, 190),
                ('Roasted Green Peas', 90, 130),
                ('Roasted Corn Nuts', 80, 120),
                ('Roasted Pumpkin Seeds', 140, 200),
                ('Roasted Sunflower Seeds', 120, 180),
                ('Roasted Almonds', 200, 300),
                ('Roasted Cashews', 220, 320),
                ('Roasted Walnuts', 180, 260),
                ('Roasted Pecans', 250, 350),
                ('Roasted Pistachios', 280, 400),
                ('Roasted Macadamia Nuts', 350, 500),
                ('Roasted Brazil Nuts', 200, 300),
                ('Roasted Hazelnuts', 180, 260),
                ('Roasted Pine Nuts', 400, 600),
                ('Roasted Chestnuts', 150, 220),
            ],
            'canned_goods': [
                ('Canned Artichoke Hearts', 120, 180),
                ('Canned Asparagus', 140, 200),
                ('Canned Hearts of Palm', 180, 250),
                ('Canned Water Chestnuts', 100, 150),
                ('Canned Bamboo Shoots', 80, 120),
                ('Canned Baby Corn', 90, 130),
                ('Canned Okra', 70, 100),
                ('Canned Beets', 80, 120),
                ('Canned Carrots', 70, 100),
                ('Canned Green Peas', 80, 120),
                ('Canned Lima Beans', 90, 130),
                ('Canned Black Beans', 100, 150),
                ('Canned Kidney Beans', 90, 130),
                ('Canned Pinto Beans', 85, 125),
                ('Canned Navy Beans', 80, 120),
                ('Canned Great Northern Beans', 90, 130),
                ('Canned Cannellini Beans', 95, 140),
                ('Canned Garbanzo Beans', 100, 150),
                ('Canned Fava Beans', 110, 160),
                ('Canned Mung Beans', 85, 125),
            ],
            'household_cleaning': [
                ('Natural Dish Soap', 120, 180),
                ('Eco-Friendly Laundry Detergent', 250, 350),
                ('Natural All Purpose Cleaner', 150, 220),
                ('Natural Toilet Cleaner', 130, 190),
                ('Natural Glass Cleaner', 110, 160),
                ('Natural Floor Cleaner', 180, 250),
                ('Natural Hand Soap', 90, 130),
                ('Natural Fabric Softener', 160, 230),
                ('Natural Bleach Alternative', 120, 180),
                ('Natural Air Freshener', 130, 190),
                ('Bamboo Kitchen Towels', 120, 180),
                ('Recycled Paper Towels', 100, 150),
                ('Biodegradable Trash Bags', 140, 200),
                ('Natural Sponges', 80, 120),
                ('Natural Scrub Brushes', 90, 130),
                ('Natural Dish Brushes', 70, 100),
                ('Natural Cleaning Cloths', 60, 90),
                ('Natural Mop Heads', 150, 220),
                ('Natural Broom', 200, 300),
                ('Natural Dustpan', 80, 120),
            ],
            'health_beauty': [
                ('Natural Shampoo', 200, 300),
                ('Natural Toothpaste', 120, 180),
                ('Natural Body Wash', 160, 240),
                ('Natural Face Cream', 250, 350),
                ('Natural Deodorant', 140, 200),
                ('Natural Hair Conditioner', 180, 260),
                ('Natural Hand Lotion', 160, 240),
                ('Natural Sunscreen', 220, 320),
                ('Natural Lip Balm', 90, 130),
                ('Natural Face Wash', 200, 300),
                ('Natural Body Lotion', 220, 320),
                ('Natural Hair Oil', 160, 240),
                ('Natural Nail Polish', 140, 200),
                ('Natural Perfume', 600, 900),
                ('Natural Makeup Remover', 160, 240),
                ('Natural Face Mask', 180, 260),
                ('Natural Eye Cream', 300, 450),
                ('Natural Toner', 150, 220),
                ('Natural Serum', 400, 600),
                ('Natural Moisturizer', 250, 350),
            ],
            'baby_care': [
                ('Organic Baby Diapers', 350, 500),
                ('Natural Baby Wipes', 140, 200),
                ('Organic Baby Shampoo', 180, 260),
                ('Natural Baby Lotion', 140, 200),
                ('Organic Baby Food', 100, 150),
                ('Natural Baby Formula', 450, 650),
                ('Organic Baby Oil', 120, 180),
                ('Natural Baby Powder', 100, 150),
                ('Organic Baby Soap', 80, 120),
                ('Natural Baby Cream', 120, 180),
                ('Organic Baby Bottles', 250, 350),
                ('Natural Baby Pacifiers', 100, 150),
                ('Organic Baby Bibs', 120, 180),
                ('Natural Baby Socks', 100, 150),
                ('Organic Baby Towels', 180, 260),
                ('Natural Baby Blankets', 200, 300),
                ('Organic Baby Clothes', 150, 220),
                ('Natural Baby Toys', 120, 180),
                ('Organic Baby Food Pouches', 80, 120),
                ('Natural Baby Teething Toys', 90, 130),
            ],
            'pet_supplies': [
                ('Organic Dog Food', 350, 500),
                ('Natural Cat Food', 300, 450),
                ('Organic Dog Treats', 140, 200),
                ('Natural Cat Treats', 120, 180),
                ('Organic Pet Shampoo', 180, 260),
                ('Natural Cat Litter', 250, 350),
                ('Organic Dog Collar', 180, 260),
                ('Natural Cat Collar', 130, 190),
                ('Organic Pet Toys', 100, 150),
                ('Natural Pet Bed', 600, 900),
                ('Organic Pet Bowl Set', 150, 220),
                ('Natural Pet Brush', 100, 150),
                ('Organic Pet Leash', 180, 260),
                ('Natural Pet Carrier', 900, 1300),
                ('Organic Pet Vitamins', 250, 350),
                ('Natural Pet Dental Care', 120, 180),
                ('Organic Pet Grooming Kit', 200, 300),
                ('Natural Pet Training Pads', 150, 220),
                ('Organic Pet Flea Treatment', 180, 260),
                ('Natural Pet Calming Aid', 160, 240),
            ],
            'deli_prepared': [
                ('Organic Salad Mix', 140, 200),
                ('Natural Hummus', 180, 260),
                ('Organic Fresh Salsa', 120, 180),
                ('Natural Guacamole', 200, 300),
                ('Organic Fresh Pasta', 140, 200),
                ('Natural Bread Sticks', 100, 150),
                ('Organic Fruit Salad', 180, 260),
                ('Natural Vegetable Platter', 240, 350),
                ('Organic Cheese Platter', 350, 500),
                ('Natural Meat Platter', 450, 650),
                ('Organic Sandwich', 140, 200),
                ('Natural Wraps', 120, 180),
                ('Organic Sushi Pack', 300, 450),
                ('Natural Spring Rolls', 180, 260),
                ('Organic Quiche', 240, 350),
                ('Natural Pasta Salad', 160, 240),
                ('Organic Potato Salad', 140, 200),
                ('Natural Coleslaw', 120, 180),
                ('Organic Bean Salad', 130, 190),
                ('Natural Grain Bowl', 180, 260),
            ],
            'international_specialty': [
                ('Truffle Oil Black', 2000, 3000),
                ('Saffron Premium Grade', 1200, 1800),
                ('Vanilla Bean Madagascar', 800, 1200),
                ('Maple Syrup Grade A', 400, 600),
                ('Manuka Honey', 500, 750),
                ('Dried Morel Mushrooms', 600, 900),
                ('Exotic Spice Blend', 300, 450),
                ('Gourmet Sea Salt', 200, 300),
                ('Truffle Pasta Black', 400, 600),
                ('Artisan Sourdough', 250, 350),
                ('Gourmet Dark Chocolate', 500, 750),
                ('Balsamic Vinegar Aged', 400, 600),
                ('Parmesan Reggiano', 600, 900),
                ('Prosciutto di Parma', 1000, 1500),
                ('Truffle Butter', 800, 1200),
                ('Saffron Rice', 350, 500),
                ('Vanilla Extract Pure', 500, 750),
                ('Maple Butter', 300, 450),
                ('Honey Raw Organic', 300, 450),
                ('Dried Porcini Mushrooms', 400, 600),
            ]
        }

        categories = list(products_data.keys())
        created_count = 0

        for i in range(200):
            # Select random category
            category = random.choice(categories)
            
            # Select random product from that category
            product_name, min_price, max_price = random.choice(products_data[category])
            
            # Generate random data
            quantity = random.randint(5, 200)
            unit_price = random.randint(min_price, max_price)
            buying_price = unit_price - random.randint(10, 50)
            
            # Generate random dates
            input_date = date.today() - timedelta(days=random.randint(0, 30))
            expiry_date = input_date + timedelta(days=random.randint(30, 365))
            
            # Create product
            product = Product.objects.create(
                name=product_name,
                category=category,
                quantity=quantity,
                unit_price=Decimal(str(unit_price)),
                buying_price=Decimal(str(buying_price)),
                input_date=input_date,
                expiry_date=expiry_date
            )
            
            created_count += 1
            self.stdout.write(f"Created product {created_count}: {product_name}")

        self.stdout.write(
            self.style.SUCCESS(f'Successfully created {created_count} more unique products!')
        ) 