# Generated by Django 4.2.23 on 2025-07-12 18:31

from django.db import migrations, models
from django.db.models import Max

def remove_duplicate_phones(apps, schema_editor):
    Customer = apps.get_model('customers', 'Customer')
    Invoice = apps.get_model('invoices', 'Invoice')
    Sale = apps.get_model('sales', 'Sale')
    Lending = apps.get_model('lending', 'Lending')
    
    # Get all phone numbers that have duplicates
    from django.db.models import Count
    duplicate_phones = Customer.objects.values('phone').annotate(
        count=Count('phone')
    ).filter(count__gt=1)
    
    for phone_data in duplicate_phones:
        phone = phone_data['phone']
        # Get all customers with this phone number, ordered by creation date (newest first)
        customers = Customer.objects.filter(phone=phone).order_by('-created_at')
        
        # Keep the most recent customer, update references for the rest
        customers_to_keep = customers.first()
        customers_to_delete = customers.exclude(id=customers_to_keep.id)
        
        print(f"Processing {customers_to_delete.count()} duplicate customers for phone {phone}")
        
        # Update all foreign key references to point to the kept customer
        for customer_to_delete in customers_to_delete:
            # Update invoices
            Invoice.objects.filter(customer=customer_to_delete).update(customer=customers_to_keep)
            
            # Update sales
            Sale.objects.filter(customer=customer_to_delete).update(customer=customers_to_keep)
            
            # Update lending records
            Lending.objects.filter(customer=customer_to_delete).update(customer=customers_to_keep)
            
            # Now safe to delete the duplicate customer
            customer_to_delete.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0001_initial'),
        ('invoices', '0001_initial'),
        ('sales', '0001_initial'),
        ('lending', '0001_initial'),
    ]

    operations = [
        # First, remove duplicate phone numbers
        migrations.RunPython(remove_duplicate_phones, reverse_code=migrations.RunPython.noop),
        
        # Then add the unique constraint
        migrations.AlterField(
            model_name='customer',
            name='phone',
            field=models.CharField(max_length=20, unique=True),
        ),
    ]
